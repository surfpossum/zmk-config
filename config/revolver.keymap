// based on https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/cradio/cradio.keymap
// and https://github.com/christianselig/caldera-keyboard/blob/main/zmk-config-caldera/config/caldera.keymap

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

#define NUMLAYER 1
#define nk0 0
#define nk1 1
#define nk2 2
#define nk3 3
#define nk4 6
#define nk5 7

#define SYMLAYER 2

#define FUNCLAYER 3

#define MOUSELAYER 4

#define kO 0
#define kA 1
#define kT 2
#define kE 3
#define lm1 5
#define lm2 4
#define kN 6
#define kR 7
#define kI 8
#define kS 9
#define rm1 11
#define rm2 10
#define CAD_ESC      &mt LC(LA(DEL)) ESC      //hold: control alt delete | tap: escape
#define AS(keycode) &as LS(keycode) keycode

// COMBO(one, &kp N1, 0 10, 0)
#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
  };
	
#define TAPDANCE(NAME, BINDING1, BINDING2, TAPTERM) \
	td_##NAME: tap_dance_##NAME { \
		compatible = "zmk,behavior-tap-dance"; \
		#binding-cells = <0>; \
		tapping-term-ms = <TAPTERM>; \
		bindings = <BINDING1>, <BINDING2>; \
	};

// | SW00 | SW01 | SW02 | SW03 | | SW06 | SW07 | SW08 | SW09 |
// | SW04 | SW05 |                             | SW10 | SW11 |
//  ---------------------------------------------------------
// | O    | A    | T    | E    | | N    | R    | I    | S    |
// | SPC  | TAB  |                             | RET  | BSPC |

/ {
    combos {
        compatible = "zmk,combos";
				COMBO(c_H, AS(H), kE kN, 0)
				COMBO(c_D, AS(D), kT kN, 0)
				COMBO(c_L, AS(L), kA kN, 0)
				COMBO(c_F, AS(F), kE kR, 0)
				COMBO(c_C, AS(C), kE kI, 0)
				COMBO(c_M, AS(M), kT kR, 0)
				COMBO(c_U, AS(U), kA kR, 0)
				COMBO(c_G, AS(G), kT kI, 0)
				COMBO(c_Y, AS(Y), kA kS, 0)
				COMBO(c_P, AS(P), kN kR, 0)
				COMBO(c_W, AS(W), kT kE, 0)
				COMBO(c_B, AS(B), kR kI, 0)
				COMBO(c_V, AS(V), kA kT, 0)
				COMBO(c_K, AS(K), kN kI, 0)
				COMBO(c_J, AS(J), kA kE, 0)
				COMBO(c_X, AS(X), kR kS, 0)
				COMBO(c_Z, AS(Z), kO kT, 0)
				COMBO(c_Q, AS(Q), kO kS, 0)
				
				COMBO(c_SPCDOT, &mt SPACE DOT, kI kS, 0)
				COMBO(c_COMMA, &kp COMMA, kO kA, 0)
				COMBO(c_QMARK, &kp QMARK, kN kS, 0)
				COMBO(c_EXCL, &kp EXCL, kO kE, 0)
				COMBO(c_SQT, &kp SQT, kO kA kN, 0)
				
				COMBO(numLayer, &mo NUMLAYER, rm1 rm2, 0 1)
				COMBO(c_n6, &mt N6 CARET, nk1 nk5, 1)
				COMBO(c_n6b, &mt N6 CARET, nk2 nk4, 1)
				COMBO(c_n7, &mt N7 AMPS, nk2 nk5, 1)
				COMBO(c_n7b, &mt N7 AMPS, nk3 nk4, 1)
				COMBO(c_n8, &mt N8 STAR, nk3 nk5, 1)
				COMBO(c_n9, &mt N9 LPAR, nk4 nk5, 1)
				
				//COMBO(c_symLayer, &mo SYMLAYER, rm1 rm2, 0)
				
				//combo_funcLayer { timeout-ms = <50>; key-positions = <rm1 rm2>; bindings = <&mo FUNCLAYER>; };
				
				COMBO(c_bluetoothNext, &bt BT_NXT, rm1 lm2, 0)
				COMBO(c_bluetoothPrev, &bt BT_PRV, rm2 lm1, 0)
				
				COMBO(c_mouseLayer, &mo MOUSELAYER, lm1 lm2, 0)
				
				//delete
				//arrow keys
				//brackets
				//slashes
				//colon
				//function
				//os
				//mods
    };
		
	behaviors {
		skq: sticky_key_quick_release {
			compatible = "zmk,behavior-sticky-key";
			#binding-cells = <1>;
			bindings = <&kp>;
			release-after-ms = <5000>;
			quick-release;
			lazy;
			ignore-modifiers;
		};
		
		as: auto_shift {
			compatible = "zmk,behavior-hold-tap";
			label = "AUTO_SHIFT";
			#binding-cells = <2>;
			tapping_term_ms = <180>;
			quick_tap_ms = <50>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		
		TAPDANCE(bkspc_numlayer, &kp BSPC, &to NUMLAYER, 150)
	};
	
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
				AS(O)
				AS(A)
				AS(T)
				AS(E)
				&mt DOT SPACE
				AS(TAB)
				
				AS(N)
				AS(R)
				AS(I)
				AS(S)
				&kp RET
				&kp BSPC
			>;
		};

		number_layer {
			bindings = <
				&mt EXCL N1
				&mt AT N2
				&mt HASH N3
				&mt DLLR N4
				&kp TAB
				&mt DOT SPACE
				
				&mt PRCT N5
				&mt RPAR N0
				&kp A
				&kp B
				&trans
				&trans 
			>;
		};

		symbol_layer {
			bindings = <
				&mt N1 EXCL
				&mt N2 AT
				&mt N3 HASH
				&mt N4 DLLR
				&mt SPACE DOT
				&kp TAB	
				&mt PRCT N5
				&mt RPAR N0
				&kp A
				&kp B
				&to NUMLAYER
				&to 0 
			>;
		};

		function_layer {
			bindings = <
				&mt N1 EXCL
				&mt N2 AT
				&mt N3 HASH
				&mt N4 DLLR
				&kp SPACE
				&kp TAB	
				&mt N5 PRCT
				&mt N0 RPAR
				&kp A
				&kp B
				&none
				CAD_ESC
			>;
		};

		mouse_layer {
			bindings = <
				AS(O)
				AS(A)
				&msc SCRL_DOWN
				&msc SCRL_UP
				&none
				&none
				&mkp MB1
				&mkp MB2
				&mmv MOVE_UP
				&mmv MOVE_RIGHT
				&mmv MOVE_LEFT
				&mmv MOVE_DOWN
			>;
		};
	};
};
